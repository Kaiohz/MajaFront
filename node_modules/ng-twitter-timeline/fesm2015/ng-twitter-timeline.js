import { Observable } from 'rxjs';
import { Injectable, Component, ElementRef, Input, NgModule, defineInjectable } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgTwitterTimelineService {
    constructor() {
        this.TWITTER_SCRIPT_ID = 'twitter-wjs';
        this.TWITTER_WIDGET_URL = 'https://platform.twitter.com/widgets.js';
    }
    /**
     * @return {?}
     */
    loadScript() {
        return Observable.create((/**
         * @param {?} observer
         * @return {?}
         */
        observer => {
            this.startScriptLoad();
            window['twttr'].ready((/**
             * @param {?} twttr
             * @return {?}
             */
            function onLoadTwitterScript(twttr) {
                observer.next(twttr);
                observer.complete();
            }));
        }));
    }
    /**
     * @private
     * @return {?}
     */
    startScriptLoad() {
        window['twttr'] = ((/**
         * @param {?} d
         * @param {?} s
         * @param {?} id
         * @param {?} url
         * @return {?}
         */
        function (d, s, id, url) {
            /** @type {?} */
            let js;
            /** @type {?} */
            let fjs = d.getElementsByTagName(s)[0];
            /** @type {?} */
            let t = window['twttr'] || {};
            if (d.getElementById(id)) {
                return t;
            }
            js = d.createElement(s);
            js.id = id;
            js.src = url;
            fjs.parentNode.insertBefore(js, fjs);
            t._e = [];
            t.ready = (/**
             * @param {?} f
             * @return {?}
             */
            function (f) {
                t._e.push(f);
            });
            return t;
        })(document, 'script', this.TWITTER_SCRIPT_ID, this.TWITTER_WIDGET_URL));
    }
}
NgTwitterTimelineService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
NgTwitterTimelineService.ctorParameters = () => [];
/** @nocollapse */ NgTwitterTimelineService.ngInjectableDef = defineInjectable({ factory: function NgTwitterTimelineService_Factory() { return new NgTwitterTimelineService(); }, token: NgTwitterTimelineService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgTwitterTimelineComponent {
    /**
     * @param {?} ngTwitterTimelineService
     * @param {?} element
     */
    constructor(ngTwitterTimelineService, element) {
        this.ngTwitterTimelineService = ngTwitterTimelineService;
        this.element = element;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.ngTwitterTimelineService.loadScript().subscribe((/**
         * @param {?} twttr
         * @return {?}
         */
        twttr => {
            /** @type {?} */
            let nativeElement = this.element.nativeElement;
            window['twttr'].widgets.createTimeline(this.dataSrc, nativeElement, this.opts).then((/**
             * @param {?} embed
             * @return {?}
             */
            function success(embed) {
                console.log('Created tweet widget: ', embed);
            })).catch((/**
             * @param {?} message
             * @return {?}
             */
            function creationError(message) {
                console.log('Could not create widget: ', message);
            }));
        }), (/**
         * @param {?} err
         * @return {?}
         */
        err => {
            console.log('****  ERROR LOADING TWITTER WIDGET', err);
        }), (/**
         * @return {?}
         */
        () => { }));
    }
}
NgTwitterTimelineComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-twitter-timeline',
                template: `<div></div>`
            }] }
];
/** @nocollapse */
NgTwitterTimelineComponent.ctorParameters = () => [
    { type: NgTwitterTimelineService },
    { type: ElementRef }
];
NgTwitterTimelineComponent.propDecorators = {
    dataSrc: [{ type: Input }],
    opts: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgTwitterTimelineModule {
}
NgTwitterTimelineModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NgTwitterTimelineComponent],
                imports: [],
                exports: [NgTwitterTimelineComponent]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgTwitterTimelineService, NgTwitterTimelineComponent, NgTwitterTimelineModule };

//# sourceMappingURL=ng-twitter-timeline.js.map