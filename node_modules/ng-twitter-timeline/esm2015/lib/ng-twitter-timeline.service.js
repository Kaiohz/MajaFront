/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export class NgTwitterTimelineService {
    constructor() {
        this.TWITTER_SCRIPT_ID = 'twitter-wjs';
        this.TWITTER_WIDGET_URL = 'https://platform.twitter.com/widgets.js';
    }
    /**
     * @return {?}
     */
    loadScript() {
        return Observable.create((/**
         * @param {?} observer
         * @return {?}
         */
        observer => {
            this.startScriptLoad();
            window['twttr'].ready((/**
             * @param {?} twttr
             * @return {?}
             */
            function onLoadTwitterScript(twttr) {
                observer.next(twttr);
                observer.complete();
            }));
        }));
    }
    /**
     * @private
     * @return {?}
     */
    startScriptLoad() {
        window['twttr'] = ((/**
         * @param {?} d
         * @param {?} s
         * @param {?} id
         * @param {?} url
         * @return {?}
         */
        function (d, s, id, url) {
            /** @type {?} */
            let js;
            /** @type {?} */
            let fjs = d.getElementsByTagName(s)[0];
            /** @type {?} */
            let t = window['twttr'] || {};
            if (d.getElementById(id)) {
                return t;
            }
            js = d.createElement(s);
            js.id = id;
            js.src = url;
            fjs.parentNode.insertBefore(js, fjs);
            t._e = [];
            t.ready = (/**
             * @param {?} f
             * @return {?}
             */
            function (f) {
                t._e.push(f);
            });
            return t;
        })(document, 'script', this.TWITTER_SCRIPT_ID, this.TWITTER_WIDGET_URL));
    }
}
NgTwitterTimelineService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
NgTwitterTimelineService.ctorParameters = () => [];
/** @nocollapse */ NgTwitterTimelineService.ngInjectableDef = i0.defineInjectable({ factory: function NgTwitterTimelineService_Factory() { return new NgTwitterTimelineService(); }, token: NgTwitterTimelineService, providedIn: "root" });
if (false) {
    /** @type {?} */
    NgTwitterTimelineService.prototype.TWITTER_SCRIPT_ID;
    /** @type {?} */
    NgTwitterTimelineService.prototype.TWITTER_WIDGET_URL;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctdHdpdHRlci10aW1lbGluZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctdHdpdHRlci10aW1lbGluZS8iLCJzb3VyY2VzIjpbImxpYi9uZy10d2l0dGVyLXRpbWVsaW5lLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLE1BQU0sQ0FBQzs7QUFLaEMsTUFBTSxPQUFPLHdCQUF3QjtJQUtuQztRQUhTLHNCQUFpQixHQUFHLGFBQWEsQ0FBQztRQUNsQyx1QkFBa0IsR0FBRyx5Q0FBeUMsQ0FBQztJQUd4RSxDQUFDOzs7O0lBRUQsVUFBVTtRQUNSLE9BQU8sVUFBVSxDQUFDLE1BQU07Ozs7UUFBQyxRQUFRLENBQUMsRUFBRTtZQUNsQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7WUFFdkIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUs7Ozs7WUFDbkIsU0FBUyxtQkFBbUIsQ0FBQyxLQUFLO2dCQUNoQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNyQixRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDdEIsQ0FBQyxFQUNGLENBQUM7UUFDSixDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRU8sZUFBZTtRQUNyQixNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQzs7Ozs7OztRQUFBLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsR0FBRzs7Z0JBQ3BDLEVBQUU7O2dCQUNGLEdBQUcsR0FBRyxDQUFDLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDOztnQkFDbEMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFO1lBRTdCLElBQUksQ0FBQyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsRUFBRTtnQkFDeEIsT0FBTyxDQUFDLENBQUM7YUFDVjtZQUVELEVBQUUsR0FBRyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1lBQ1gsRUFBRSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7WUFDYixHQUFHLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFFckMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7WUFFVixDQUFDLENBQUMsS0FBSzs7OztZQUFHLFVBQVUsQ0FBQztnQkFDbkIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDZixDQUFDLENBQUEsQ0FBQztZQUVGLE9BQU8sQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxFQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7SUFDMUUsQ0FBQzs7O1lBL0NGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7Ozs7OztJQUdDLHFEQUEyQzs7SUFDM0Msc0RBQXdFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmdUd2l0dGVyVGltZWxpbmVTZXJ2aWNlIHtcblxuICByZWFkb25seSBUV0lUVEVSX1NDUklQVF9JRCA9ICd0d2l0dGVyLXdqcyc7XG4gIHJlYWRvbmx5IFRXSVRURVJfV0lER0VUX1VSTCA9ICdodHRwczovL3BsYXRmb3JtLnR3aXR0ZXIuY29tL3dpZGdldHMuanMnO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgbG9hZFNjcmlwdCgpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiBPYnNlcnZhYmxlLmNyZWF0ZShvYnNlcnZlciA9PiB7XG4gICAgICB0aGlzLnN0YXJ0U2NyaXB0TG9hZCgpO1xuXG4gICAgICB3aW5kb3dbJ3R3dHRyJ10ucmVhZHkoXG4gICAgICAgIGZ1bmN0aW9uIG9uTG9hZFR3aXR0ZXJTY3JpcHQodHd0dHIpIHtcbiAgICAgICAgICBvYnNlcnZlci5uZXh0KHR3dHRyKTtcbiAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSgpO1xuICAgICAgICB9XG4gICAgICApO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGFydFNjcmlwdExvYWQoKSB7XG4gICAgd2luZG93Wyd0d3R0ciddID0gKGZ1bmN0aW9uIChkLCBzLCBpZCwgdXJsKSB7XG4gICAgICBsZXQganM7XG4gICAgICBsZXQgZmpzID0gZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXTtcbiAgICAgIGxldCB0ID0gd2luZG93Wyd0d3R0ciddIHx8IHt9O1xuXG4gICAgICBpZiAoZC5nZXRFbGVtZW50QnlJZChpZCkpIHtcbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgICB9XG5cbiAgICAgIGpzID0gZC5jcmVhdGVFbGVtZW50KHMpO1xuICAgICAganMuaWQgPSBpZDtcbiAgICAgIGpzLnNyYyA9IHVybDtcbiAgICAgIGZqcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqcywgZmpzKTtcblxuICAgICAgdC5fZSA9IFtdO1xuXG4gICAgICB0LnJlYWR5ID0gZnVuY3Rpb24gKGYpIHtcbiAgICAgICAgdC5fZS5wdXNoKGYpO1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIHQ7XG4gICAgfShkb2N1bWVudCwgJ3NjcmlwdCcsIHRoaXMuVFdJVFRFUl9TQ1JJUFRfSUQsIHRoaXMuVFdJVFRFUl9XSURHRVRfVVJMKSk7XG4gIH1cbn1cbiJdfQ==